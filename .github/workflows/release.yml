name: Release Publish Data S3

on:
  pull_request:
    branches:
      - main
    types:
      - closed

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

jobs:
  deploy:
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')
    runs-on: ubuntu-latest
    environment: Production
    permissions:
      id-token: write
      contents: write
    strategy:
      matrix:
        schema: [ microblink_receipt, shopify_order ]
    steps:
      - uses: actions/checkout@v4
      - name: cargo-lambda
        run: |
          brew tap cargo-lambda/cargo-lambda
          brew install cargo-lambda

      - name: Setup Wrangler
        run: |
          cd infra && npm ci

      - name: Deploy
        run: |
          cd infra
          make deploy feature=${{ matrix.schema }}

      - name: Secrets
        run: |
          cd infra
          echo ${{ secrets.BUCKET_KEY_ID }} | wrangler secret put BUCKET_KEY_ID
          echo ${{ secrets.BUCKET_KEY_SECRET }} | wrangler secret put BUCKET_KEY_SECRET

  release:
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Version
        id: version
        run: |
          export CURRENT_VERSION=$(grep -m 1 'version = "' endpoint/Cargo.toml | awk -F '"' '{print $2}')
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.version.outputs.current }}
