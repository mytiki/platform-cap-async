name: Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  shopify_order:
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Package
        run: cd endpoint/shopify_order && cargo install -q worker-build && worker-build --release

      - name: Deploy
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "endpoint/shopify_order"
          secrets: |
            BUCKET_KEY_ID
            BUCKET_KEY_SECRET
        env:
          BUCKET_KEY_ID: ${{ secrets.BUCKET_KEY_ID }}
          BUCKET_KEY_SECRET: ${{ secrets.BUCKET_KEY_SECRET }}

  microblink_receipt:
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Package
        run: cd endpoint/microblink_receipt && cargo install -q worker-build && worker-build --release

      - name: Deploy
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "endpoint/microblink_receipt"
          secrets: |
            BUCKET_KEY_ID
            BUCKET_KEY_SECRET
        env:
          BUCKET_KEY_ID: ${{ secrets.BUCKET_KEY_ID }}
          BUCKET_KEY_SECRET: ${{ secrets.BUCKET_KEY_SECRET }}

  create_release:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Version
        id: version
        run: |
          export CURRENT_VERSION=$(grep -m 1 'version = "' generate/Cargo.toml | awk -F '"' '{print $2}')
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.version.outputs.current }}
